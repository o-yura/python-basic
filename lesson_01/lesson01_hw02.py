# 2. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6.
# Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака.
# Объяснить полученный результат.

# ссылка на блок-схему
# https://drive.google.com/file/d/1vPwFmr3Riz1eVd9b6RndK5T_L9MA9lYG/view?usp=sharing


dig1 = 5
dig2 = 6

res_or = dig1 | dig2
print('Побитовая операция "ИЛИ"', res_or, bin(res_or))
res_excl_or = dig1 ^ dig2
print('Побитовая операция "ИСКЛЮЧАЮЩЕЕ ИЛИ"', res_excl_or, bin(res_excl_or))
res_and = dig1 & dig2
print('Побитовая операция "И"', res_and, bin(res_and))
dig1_left = dig1 << 2
print('Побитовый сдвиг влево на 2 числа {} ({}) = {} ({})'.format(dig1, bin(dig1), dig1_left, bin(dig1_left)))
dig1_right = dig1 >> 1
print('Побитовый сдвиг вправо на 1 числа {} ({}) = {} ({})'.format(dig1, bin(dig1), dig1_right, bin(dig1_right)))

# ОБЪЯСНЕНИЕ
#
# Операция И:
# Любой бит, установленный в 0, вызывает установку соответствующего бита результата также в 0.
#
# Операция ИЛИ:
# Любой бит, установленный в 1, вызывает установку соответствующего бита результата также в 1.
#
# Операция Исключающее ИЛИ:
# Принимается значение бита результата в 1, если значения в соответствующих битах исходных переменных различны.

# Побитовый сдвиг:
# Биты сдвигаются в переменной влево или вправо на указанное число.
# При этом на освободившиеся позиции устанавливаются нули.
# Сдвиг влево фактически приводит к умножению числа на два, сдвиг вправо — к делению.
